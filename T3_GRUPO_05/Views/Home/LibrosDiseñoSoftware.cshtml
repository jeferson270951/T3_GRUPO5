
@{
    ViewData["Title"] = "LibrosDiseñoSoftware";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    body {
        background-image: linear-gradient(to bottom right, #FCCE32, #FF2B5B);
        font-family: Roboto;
    }

    .bloque {
        background-color: white;
        box-shadow: 0 0 30px rgba(0, 0, 0, 0.2);
        padding: 20px;
        height: 100%;
        width: 100%;
        border-radius: 10px;
    }

        .bloque h1 {
            color: black;
            font-weight: 900;
            text-align: center;
            margin-bottom: 20px;
        }

    .container {
        color: white;
    }

    .Datos h2, p {
        color: black;
    }

    .Datos {
        font-family: Roboto;
    }

        .Datos p {
            text-align: justify;
        }

        .Datos img {
            margin: 10px 30%;
            width: 500px;
            height: auto;
            border-radius: 20px;
        }

</style>

<div class="bloque">
    <h1>Libros de Diseño de Software</h1>
    <div class="Datos">
        <h2>1. Design Patterns: Elements of Reusable Object-Oriented Software</h2>
        <p>Este clásico presenta 23 patrones de diseño que son soluciones probadas a problemas comunes en el diseño de software orientado a objetos. Es esencial para cualquier desarrollador que busque mejorar su capacidad de diseñar software reutilizable y flexible.</p>
        <img src="https://m.media-amazon.com/images/I/81gtKoapHFL._AC_UF1000,1000_QL80_.jpg" />
    </div>
    <div class="Datos">
        <h2>2. Refactoring: Improving the Design of Existing Code</h2>
        <p>Fowler introduce el concepto de refactorización, que es el proceso de mejorar el diseño de código existente sin cambiar su comportamiento externo. El libro es una guía práctica con ejemplos claros sobre cómo aplicar técnicas de refactorización.</p>
        <img src="https://m.media-amazon.com/images/I/71e6ndHEwqL._AC_UF1000,1000_QL80_.jpg" />
    </div>
    <div class="Datos">
        <h2>3. Domain-Driven Design: Tackling Complexity in the Heart of Software</h2>
        <p>Evans explora cómo utilizar el diseño centrado en el dominio para gestionar la complejidad en el desarrollo de software. El libro presenta técnicas y patrones para modelar dominios complejos y construir software que refleje fielmente las reglas del negocio.</p>
        <img src="https://m.media-amazon.com/images/I/71Qde+ZerdL.jpg" />
    </div>
    <div class="Datos">
        <h2>4. The Pragmatic Programmer: Your Journey to Mastery</h2>
        <p>Aunque cubre más que solo diseño de software, este libro es una guía esencial para desarrolladores que buscan mejorar sus habilidades y prácticas de desarrollo. Proporciona consejos prácticos y técnicas para abordar problemas comunes y mejorar la calidad del código.</p>
        <img src="https://m.media-amazon.com/images/I/61ztlXgCmpL._AC_UF1000,1000_QL80_.jpg" />
    </div>
</div>

